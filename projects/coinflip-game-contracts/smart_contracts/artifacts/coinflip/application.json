{
    "hints": {
        "hello(string)string": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "start_game(pay,string)string": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "join_game(pay)string": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "resolve_game(account)string": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "check_wins()uint64": {
            "call_config": {
                "no_op": "CALL"
            }
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDgKcHVzaGludCAwIC8vIDAKcmV0dXJu"
    },
    "state": {
        "global": {
            "num_byte_slices": 4,
            "num_uints": 1
        },
        "local": {
            "num_byte_slices": 0,
            "num_uints": 1
        }
    },
    "schema": {
        "global": {
            "declared": {
                "player_a_account": {
                    "type": "bytes",
                    "key": "player_a_account",
                    "descr": "First player's account"
                },
                "player_a_side": {
                    "type": "bytes",
                    "key": "player_a_side",
                    "descr": "First player's side of the coin"
                },
                "player_b_account": {
                    "type": "bytes",
                    "key": "player_b_account",
                    "descr": "Second player's account"
                },
                "player_b_side": {
                    "type": "bytes",
                    "key": "player_b_side",
                    "descr": "Second player's side of the coin"
                },
                "wager": {
                    "type": "uint64",
                    "key": "wager",
                    "descr": "Betting amount for the coinflip"
                }
            },
            "reserved": {}
        },
        "local": {
            "declared": {
                "player_games_won": {
                    "type": "uint64",
                    "key": "player_games_won",
                    "descr": "Amount of coinflip games won"
                }
            },
            "reserved": {}
        }
    },
    "contract": {
        "name": "coinflip",
        "methods": [
            {
                "name": "hello",
                "args": [
                    {
                        "type": "string",
                        "name": "name"
                    }
                ],
                "returns": {
                    "type": "string"
                }
            },
            {
                "name": "start_game",
                "args": [
                    {
                        "type": "pay",
                        "name": "payment"
                    },
                    {
                        "type": "string",
                        "name": "choice"
                    }
                ],
                "returns": {
                    "type": "string"
                },
                "desc": "Player A initiates the game, pays the wager, and chooses the coin side.\nIf the player hasn't opted in, they will be automatically opted in."
            },
            {
                "name": "join_game",
                "args": [
                    {
                        "type": "pay",
                        "name": "payment"
                    }
                ],
                "returns": {
                    "type": "string"
                },
                "desc": "Player B joins the game, gets the remaining coin side, and pays the wager.\nIf Player B hasn't opted in, they will be automatically opted in."
            },
            {
                "name": "resolve_game",
                "args": [
                    {
                        "type": "account",
                        "name": "opp"
                    }
                ],
                "returns": {
                    "type": "string"
                },
                "desc": "Player A resolves the game, win counter updates and the wager pays out to the player who won"
            },
            {
                "name": "check_wins",
                "args": [],
                "returns": {
                    "type": "uint64"
                },
                "desc": "Check personal number of coinflip wins"
            }
        ],
        "networks": {}
    },
    "bare_call_config": {
        "no_op": "CREATE",
        "opt_in": "CALL"
    }
}